*stream

import java.util.Arrays;
import java.util.List;

public class _01_Stream {

	public static void main(String[] args) {
		List<Integer> nums = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
		
		//리스트에서 짝수를 구해서 각 수를 제곱 한 후, 모두 더한 결과를 구하시오.
		
		int sum = nums.stream()	//리스트를 스트림으로 변환 => 스트림을 생성
			.filter(n -> n % 2 == 0)//결과에 맞는 애들만 추출
			.map(n -> n * n)//명령 수행 후 요소 반환
			//.reduce(0, (a, b) -> a + b);//.reduce(0, Integer::sum);//스트림의 요소를 한 개씩 줄여 나가면서 연산
		
		System.out.println("결과는 " + sum);
		System.out.println("nums List: " + nums);
		
		//리스트에서 홀수를 구해서 각 수에 1을 더한 후, 모두 곱한 결과를 구하시오.
		
		int num = nums.stream()
				.filter(n1 -> n1 % 2 != 0)
				.map(n1 -> n1 + 1)
				.reduce(1, (a, b) -> a * b);
		
		System.out.println("결과는" + num);
		System.out.println("nums List: " + nums);
	}

}

1. stream

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class _02_Stream {

	public static void main(String[] args) {
		List<String> words = Arrays.asList("culture", "conscience", "cat", "dog", "lionking");

		//문자열 리스트에서 길이가 6이상인 단어만 대문자로 변환해서 새로운 리스트 생성
		List<String> filterWord = words.stream().filter(word -> word.length() >= 6)
		//.map(String::toUpperCase)
		.map(word -> word.toUpperCase())//word를 대문자로 변환하겠다.//람다식
		.collect(Collectors.toList());
				//스트림 생성.길이가 6이상 필터링.대문자로 변환.스트림의 요소를 리스트에 담아 리턴
		
		System.out.println("결과: " + filterWord);
	}

}

2.stream

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class _03_Stream {

	public static void main(String[] args) {
		List<Integer> nums = Arrays.asList(5, 3, 7, 2, 4, 8, 1, 6, 9, 10);

		//정렬 후 새로운 리스트에 담기
		List<Integer> sortNums = nums.stream().sorted().collect(Collectors.toList());//정렬 후 리스트에 담는다
		
		System.out.println("Original List" + nums);
		System.out.println("Sorted List " + sortNums);
	}

}

3. stream

import java.util.Arrays;
import java.util.List;

public class H1 {

	public static void main(String[] args) {
		List<String> words = Arrays.asList("cat", "dog", "elephant", "cat", "lion");
		
		int wordsList = words.stream().mapToInt(String::length).sum();
		System.out.println("단어의 총 길이: " + wordsList);
	}

}

4.stream

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class H2 {

	public static void main(String[] args) {
		 List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
		 
		 List<Integer> nums = numbers.stream().filter(n -> n % 3 == 0).map(n -> n * 2).collect(Collectors.toList());
		 
		 System.out.println("리스트 출력 : " + nums);

	}

}

5.stream

import java.util.Arrays;

public class _04_Stream {

	public static void main(String[] args) {
		int[] nums = {3, 6, 1,  4, 5, 5, 3, 2, 1, 8, 9, 9, 4, 7, 5, 2};

					//배열.스트림 생성(num배열).중복제거 .홀수 필터 .3개 뽑아낸다 .새로운 배열 만들기
		int[] arr = Arrays.stream(nums).distinct().filter(n -> n % 2 != 0).limit(3).toArray();
		
		//배열을 정렬해서 새로운 배열로 저장
		int[] ar = Arrays.stream(nums).sorted().toArray();
		
		Arrays.stream(nums).sorted().forEach(System.out::print);//호출// 자바가 알아서 처리하게 :: 후 메서드 이름만 사용//메서드 레퍼런스
		System.out.println();
		Arrays.stream(nums).sorted().forEach(n -> System.out.print(n + " "));//람다 식 사용
		System.out.println();
		
		System.out.println("Original Array " + Arrays.toString(nums));
		System.out.println("Operation Array " + Arrays.toString(arr));
		System.out.println("Sorted Array " + Arrays.toString(ar));
	}

}

6.stream

import java.util.Arrays;
import java.util.List;

public class _05_Stream {

	public static void main(String[] args) {
		List<Integer> list = Arrays.asList(7, 2, 45, 25, 86, 13, 345);
		
		int minValue = list.stream()
				.min(Integer::compareTo)
				.orElse(-1);
		
		int maxValue = list.stream()
				.max(Integer::compareTo)
				.orElse(-1);
		System.out.println("최솟값: " + minValue + "최댓값: " + maxValue);

	}

}
